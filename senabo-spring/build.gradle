plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.senabo'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // security 설정
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // jwt 설정
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'


    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // mariaDB
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    // swagger를 위한 springdoc dependency 추가
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // firebase fcm 설정
    implementation 'com.google.firebase:firebase-admin:9.2.0'
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'

    // QueryDSL 설정
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named('test') {
    useJUnitPlatform()
}

// querydsl 추가 설정 (선택 사항)
def querydslDir = "$buildDir/generated/querydsl"

// java source set에 Q클래스 적용
sourceSets {
    main.java.srcDirs += [querydslDir]
}

// Q클래스 location 위치 적용
tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

// gradle clean task 실행시 Q클래스 삭제
clean {
    delete file(querydslDir)
}